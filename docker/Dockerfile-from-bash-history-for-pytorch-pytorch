FROM pytorch/pytorch

## This is the version we probably want to get to, but that crashes
## in interesting ways, so we'll use pytorch/pytorch as an intermediary.

# FROM pytorch/pytorch:1.5-cuda10.1-cudnn7-devel

## This is the working version we're starting from (without knowing what the Dockerfile is)
# From calmzone/pytorch_cuda101

######################################################################
# Getting dependencies into the linux system

RUN apt-get  clean
RUN apt-get update -y
RUN apt-get  -y install git

RUN apt-get install -y apt-utils
RUN apt-get install -y nvidia-cuda-dev
RUN apt-get install -y nvidia-cuda-toolkit

RUN apt install -y libprotobuf-dev protobuf-compiler
RUN apt install -y libc-bin

RUN apt install -y cmake
RUN apt install -y tmux
RUN apt install -y gcc
RUN apt install -y gcc-5
RUN apt install -y g++-5


######################################################################
# Getting dependencies into the python system, and setting up the
# conda workspace (but not activating yet)

##
## Installing a set of python components known to work in the legacy
## pytorch_cuda101 image.
##

WORKDIR /workspace
# Do this, since it's so slow When the whole requirements.txt thing works, remove
# the RUN PIP pre copy
RUN pip install torch==1.4.0
COPY pytorch_cuda101_requirements.txt requirements.txt
RUN pip install -r requirements.txt


RUN python -m ipykernel install --user --name=pytorchgpu
RUN conda create --name pytorchgpu


######################################################################
# Installing the misc speech recognition subsystems


##
## Installing warp-ctc
##

WORKDIR /workspace
RUN  git clone https://github.com/SeanNaren/warp-ctc.git
WORKDIR /workspace/warp-ctc/build

RUN CC=gcc-5 CXX=/usr/bin/gcc-5 cmake ..
RUN make

##
##  Installing danspeech training
##

WORKDIR /workspace
RUN git clone https://github.com/danspeech/danspeech_training
WORKDIR /workspace/danspeech_training

# Edit ut warp-ctc version requirement since it's been already installed manualy
RUN cp env_train.yml env_train.ymlcp
RUN grep -v warpctc env_train.ymlcp > env_train.yml
RUN rm env_train.ymlcp
RUN conda env create -n training -f env_train.yml

# Activating use of the "training" conda environment
SHELL ["conda", "run", "-n", "training", "/bin/bash", "-c"]

WORKDIR /workspace
RUN pip install danspeech
RUN git clone --recursive http://github.com/parlance/ctcdecode.git
WORKDIR /workspace/ctcdecode/
RUN pip install .

##
## Pytorch binding
##
WORKDIR /workspace/danspeech_training
RUN git clone https://github.com/SeanNaren/warp-ctc.git
WORKDIR /workspace/danspeech_training/warp-ctc/build
RUN CC=gcc-5 cmake ..
RUN make

ENV  CUDA_HOME /usr/local/cuda
WORKDIR /workspace/danspeech_training/warp-ctc/pytorch_binding
RUN python setup.py install


##
##  Installing Apex
##
WORKDIR /workspace
RUN  git clone --recursive https://github.com/NVIDIA/apex.git
WORKDIR /workspace/apex
RUN pip install . 

# extendingpython path to includedanspeech  training directories
RUN echo "/workspace/danspeech_training/warp-ctc/pytorch_binding/" > /opt/conda/envs/training/lib/python3.6/site-packages/extend_path.pth
RUN echo "/workspace/danspeech_training/" >> /opt/conda/envs/training/lib/python3.6/site-packages/extend_path.pth

##
########################### pytorchgpu environment
##

# Activating use of the pytorchgpu conda environment
SHELL ["conda", "run", "-n", "pytorchgpu", "/bin/bash", "-c"]

WORKDIR /workspace
RUN pip install danspeech
RUN git clone --recursive http://github.com/parlance/ctcdecode.git
WORKDIR /workspace/ctcdecode/
RUN pip install .

##
## Pytorch binding
##
WORKDIR /workspace
#RUN git clone https://github.com/SeanNaren/warp-ctc.git
WORKDIR /workspace/warp-ctc/build
RUN cmake ..
RUN make

ENV  CUDA_HOME /usr/local/cuda
WORKDIR /workspace/warp-ctc/pytorch_binding
RUN python setup.py install

##
##  Installing Apex (again? why?)
##
WORKDIR /workspace
#RUN  git clone --recursive https://github.com/NVIDIA/apex.git
WORKDIR /workspace/apex
RUN pip install . 

# extendingpython path to includedanspeech  training directories
RUN echo "/workspace/warp-ctc/pytorch_binding/" > /opt/conda/lib/python3.7/site-packages/extend_path.pth
RUN echo "/workspace/" >> /opt/conda/lib/python3.7/site-packages/extend_path.pth


